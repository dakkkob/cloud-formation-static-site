AWSTemplateFormatVersion: "2010-09-09"
Metadata:
    Generator: "former2"
Description: ""
Resources:
    IAMUser:
        Type: "AWS::IAM::User"
        Properties:
            Path: "/"
            UserName: !Ref S3Bucket2
            Groups: 
              - !Ref IAMGroup2

    IAMUser2:
        Type: "AWS::IAM::User"
        Properties:
            Path: "/"
            UserName: "Synology"
            Groups: 
              - !Ref IAMGroup

    IAMGroup:
        Type: "AWS::IAM::Group"
        Properties:
            Path: "/"
            GroupName: "GlacierFullAccess"
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AmazonGlacierFullAccess"

    IAMGroup2:
        Type: "AWS::IAM::Group"
        Properties:
            Path: "/"
            GroupName: "Admin"
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AdministratorAccess"
              - !Ref IAMManagedPolicy2

    IAMRole:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "AWS-QuickSetup-HostMgmtRole-eu-west-1-eam6a"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ssm.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            Description: ""
            Tags: 
              - 
                Key: "QuickSetupVersion"
                Value: "1.1"
              - 
                Key: "QuickSetupType"
                Value: "Host Management"
              - 
                Key: "QuickSetupID"
                Value: "eam6a"

    IAMRole2:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "AmazonSSMRoleForInstancesQuickSetup"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore"
              - "arn:aws:iam::aws:policy/AmazonSSMPatchAssociation"
            Description: "EC2 role for SSM for Quick-Setup"

    IAMRole3:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: !Sub "AWS-QuickSetup-StackSet-Local-${IAMGroup2}istrationRole"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"cloudformation.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600

    IAMRole4:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "AWS-QuickSetup-StackSet-Local-ExecutionRole"
            AssumeRolePolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"arn:aws:iam::${AWS::AccountId}:role/AWS-QuickSetup-StackSet-Local-${IAMGroup2}istrationRole\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Sub "arn:aws:iam::aws:policy/${IAMGroup2}istratorAccess"

    IAMRole5:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "aws-elasticbeanstalk-service-role"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"elasticbeanstalk.amazonaws.com\"},\"Action\":\"sts:AssumeRole\",\"Condition\":{\"StringEquals\":{\"sts:ExternalId\":\"elasticbeanstalk\"}}}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/service-role/AWSElasticBeanstalkEnhancedHealth"
              - "arn:aws:iam::aws:policy/AWSElasticBeanstalkManagedUpdatesCustomerRolePolicy"

    IAMRole6:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: "AWSAmplifyCodeCommitExecutionRole-d3vt16jmnc3f6r"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"amplify.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy3
            Description: "The service role that will be used by AWS Amplify to read CodeCommit repositories."

    IAMRole7:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "aws-elasticbeanstalk-ec2-role"
            AssumeRolePolicyDocument: "{\"Version\":\"2008-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"ec2.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWebTier"
              - "arn:aws:iam::aws:policy/AWSElasticBeanstalkMulticontainerDocker"
              - "arn:aws:iam::aws:policy/AmazonSSMFullAccess"
              - "arn:aws:iam::aws:policy/AWSElasticBeanstalkWorkerTier"

    IAMRole8:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: !Sub "AWSCodePipelineServiceRole-${AWS::Region}-${S3Bucket2}"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codepipeline.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy7

    IAMRole9:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: !Sub "cwe-role-${AWS::Region}-${S3Bucket2}"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"events.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy5

    IAMRole10:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: "KrakonosPipelineRole"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codepipeline.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy8

    IAMRole11:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: "CodeBuildDakob"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"codebuild.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy6

    IAMRole12:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: "cwe-role-eu-west-1-KrakonosPipeline"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"events.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy

    IAMRole13:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/service-role/"
            RoleName: !Sub "${LambdaFunction}-role-zhfcsb50"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"lambda.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - !Ref IAMManagedPolicy4

    IAMRole14:
        Type: "AWS::IAM::Role"
        Properties:
            Path: "/"
            RoleName: "rds-monitoring-role"
            AssumeRolePolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Sid\":\"\",\"Effect\":\"Allow\",\"Principal\":{\"Service\":\"monitoring.rds.amazonaws.com\"},\"Action\":\"sts:AssumeRole\"}]}"
            MaxSessionDuration: 3600
            ManagedPolicyArns: 
              - "arn:aws:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"

    IAMServiceLinkedRole:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "ssm.amazonaws.com"
            Description: "Provides access to AWS Resources managed or used by Amazon SSM."

    IAMServiceLinkedRole2:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "autoscaling.amazonaws.com"
            Description: "Default Service-Linked Role enables access to AWS Services and Resources used or managed by Auto Scaling"

    IAMServiceLinkedRole3:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "managedupdates.elasticbeanstalk.amazonaws.com"

    IAMServiceLinkedRole4:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "elasticbeanstalk.amazonaws.com"

    IAMServiceLinkedRole5:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "rds.amazonaws.com"
            Description: "Allows Amazon RDS to manage AWS resources on your behalf"

    IAMServiceLinkedRole6:
        Type: "AWS::IAM::ServiceLinkedRole"
        Properties:
            AWSServiceName: "globalaccelerator.amazonaws.com"
            Description: "Allows Global Accelerator to call AWS services on customer's behalf"

    IAMManagedPolicy:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "start-pipeline-execution-eu-west-1-KrakonosPipeline"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codepipeline:StartPipelineExecution"
                            ],
                            "Resource": [
                                "arn:aws:codepipeline:eu-west-1:${AWS::AccountId}:KrakonosPipeline"
                            ]
                        }
                    ]
                }

    IAMManagedPolicy2:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "BillingFullAccess"
            Path: "/"
            PolicyDocument: |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Sid": "VisualEditor0",
                            "Effect": "Allow",
                            "Action": "aws-portal:*",
                            "Resource": "*"
                        }
                    ]
                }

    IAMManagedPolicy3:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "AWSAmplifyCodeCommitExecutionPolicy-d3vt16jmnc3f6r"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/amplify/d3vt16jmnc3f6r",
                                "arn:aws:logs:us-east-1:${AWS::AccountId}:log-group:/aws/amplify/d3vt16jmnc3f6r:*"
                            ],
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:codecommit:us-east-1:${AWS::AccountId}:${S3Bucket2}"
                            ],
                            "Action": [
                                "codecommit:GitPull"
                            ]
                        }
                    ]
                }

    IAMManagedPolicy4:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "AWSLambdaBasicExecutionRole-76673622-0e12-4d70-bde6-f5cdd429280f"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": "logs:CreateLogGroup",
                            "Resource": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ],
                            "Resource": [
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${LambdaFunction}:*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codepipeline:PutJobFailureResult",
                                "codepipeline:PutJobSuccessResult",
                                "cloudfront:CreateInvalidation"
                            ],
                            "Resource": "*"
                        }
                    ]
                }

    IAMManagedPolicy5:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: !Sub "start-pipeline-execution-${AWS::Region}-${S3Bucket2}"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codepipeline:StartPipelineExecution"
                            ],
                            "Resource": [
                                "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${S3Bucket2}"
                            ]
                        }
                    ]
                }

    IAMManagedPolicy6:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: !Sub "CodeBuildBasePolicy-${S3Bucket2}-${AWS::Region}"
            Path: "/service-role/"
            PolicyDocument: !Sub |
                {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${S3Bucket2}",
                                "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${S3Bucket2}:*"
                            ],
                            "Action": [
                                "logs:CreateLogGroup",
                                "logs:CreateLogStream",
                                "logs:PutLogEvents"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:s3:::codepipeline-${AWS::Region}-*"
                            ],
                            "Action": [
                                "s3:PutObject",
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:GetBucketAcl",
                                "s3:GetBucketLocation"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:s3:::${S3Bucket}",
                                "arn:aws:s3:::${S3Bucket}/*"
                            ],
                            "Action": [
                                "s3:PutObject",
                                "s3:GetBucketAcl",
                                "s3:GetBucketLocation"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "codebuild:CreateReportGroup",
                                "codebuild:CreateReport",
                                "codebuild:UpdateReport",
                                "codebuild:BatchPutTestCases",
                                "codebuild:BatchPutCodeCoverages"
                            ],
                            "Resource": [
                                "arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:report-group/${S3Bucket2}-*"
                            ]
                        },
                        {
                            "Effect": "Allow",
                            "Resource": [
                                "arn:aws:s3:::${S3Bucket2}/*",
                                "arn:aws:s3:::${S3Bucket2}"
                            ],
                            "Action": [
                                "s3:*"
                            ]
                        }
                    ]
                }

    IAMManagedPolicy7:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: !Sub "AWSCodePipelineServiceRole-${AWS::Region}-${S3Bucket2}"
            Path: "/service-role/"
            PolicyDocument: |
                {
                    "Statement": [
                        {
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Resource": "*",
                            "Effect": "Allow",
                            "Condition": {
                                "StringEqualsIfExists": {
                                    "iam:PassedToService": [
                                        "cloudformation.amazonaws.com",
                                        "elasticbeanstalk.amazonaws.com",
                                        "ec2.amazonaws.com",
                                        "ecs-tasks.amazonaws.com"
                                    ]
                                }
                            }
                        },
                        {
                            "Action": [
                                "codecommit:CancelUploadArchive",
                                "codecommit:GetBranch",
                                "codecommit:GetCommit",
                                "codecommit:GetRepository",
                                "codecommit:GetUploadArchiveStatus",
                                "codecommit:UploadArchive"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codedeploy:CreateDeployment",
                                "codedeploy:GetApplication",
                                "codedeploy:GetApplicationRevision",
                                "codedeploy:GetDeployment",
                                "codedeploy:GetDeploymentConfig",
                                "codedeploy:RegisterApplicationRevision"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codestar-connections:UseConnection"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "elasticbeanstalk:*",
                                "ec2:*",
                                "elasticloadbalancing:*",
                                "autoscaling:*",
                                "cloudwatch:*",
                                "s3:*",
                                "sns:*",
                                "cloudformation:*",
                                "rds:*",
                                "sqs:*",
                                "ecs:*"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "lambda:InvokeFunction",
                                "lambda:ListFunctions"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "opsworks:CreateDeployment",
                                "opsworks:DescribeApps",
                                "opsworks:DescribeCommands",
                                "opsworks:DescribeDeployments",
                                "opsworks:DescribeInstances",
                                "opsworks:DescribeStacks",
                                "opsworks:UpdateApp",
                                "opsworks:UpdateStack"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "cloudformation:CreateStack",
                                "cloudformation:DeleteStack",
                                "cloudformation:DescribeStacks",
                                "cloudformation:UpdateStack",
                                "cloudformation:CreateChangeSet",
                                "cloudformation:DeleteChangeSet",
                                "cloudformation:DescribeChangeSet",
                                "cloudformation:ExecuteChangeSet",
                                "cloudformation:SetStackPolicy",
                                "cloudformation:ValidateTemplate"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codebuild:BatchGetBuilds",
                                "codebuild:StartBuild",
                                "codebuild:BatchGetBuildBatches",
                                "codebuild:StartBuildBatch"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "devicefarm:ListProjects",
                                "devicefarm:ListDevicePools",
                                "devicefarm:GetRun",
                                "devicefarm:GetUpload",
                                "devicefarm:CreateUpload",
                                "devicefarm:ScheduleRun"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "servicecatalog:ListProvisioningArtifacts",
                                "servicecatalog:CreateProvisioningArtifact",
                                "servicecatalog:DescribeProvisioningArtifact",
                                "servicecatalog:DeleteProvisioningArtifact",
                                "servicecatalog:UpdateProduct"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:ValidateTemplate"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ecr:DescribeImages"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "states:DescribeExecution",
                                "states:DescribeStateMachine",
                                "states:StartExecution"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "appconfig:StartDeployment",
                                "appconfig:StopDeployment",
                                "appconfig:GetDeployment"
                            ],
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                }

    IAMManagedPolicy8:
        Type: "AWS::IAM::ManagedPolicy"
        Properties:
            ManagedPolicyName: "AWSCodePipelineServiceRole-eu-west-1-KrakonosPipeline"
            Path: "/service-role/"
            PolicyDocument: |
                {
                    "Statement": [
                        {
                            "Action": [
                                "iam:PassRole"
                            ],
                            "Resource": "*",
                            "Effect": "Allow",
                            "Condition": {
                                "StringEqualsIfExists": {
                                    "iam:PassedToService": [
                                        "cloudformation.amazonaws.com",
                                        "elasticbeanstalk.amazonaws.com",
                                        "ec2.amazonaws.com",
                                        "ecs-tasks.amazonaws.com"
                                    ]
                                }
                            }
                        },
                        {
                            "Action": [
                                "codecommit:CancelUploadArchive",
                                "codecommit:GetBranch",
                                "codecommit:GetCommit",
                                "codecommit:GetRepository",
                                "codecommit:GetUploadArchiveStatus",
                                "codecommit:UploadArchive"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codedeploy:CreateDeployment",
                                "codedeploy:GetApplication",
                                "codedeploy:GetApplicationRevision",
                                "codedeploy:GetDeployment",
                                "codedeploy:GetDeploymentConfig",
                                "codedeploy:RegisterApplicationRevision"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codestar-connections:UseConnection"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "elasticbeanstalk:*",
                                "ec2:*",
                                "elasticloadbalancing:*",
                                "autoscaling:*",
                                "cloudwatch:*",
                                "s3:*",
                                "sns:*",
                                "cloudformation:*",
                                "rds:*",
                                "sqs:*",
                                "ecs:*"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "lambda:InvokeFunction",
                                "lambda:ListFunctions"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "opsworks:CreateDeployment",
                                "opsworks:DescribeApps",
                                "opsworks:DescribeCommands",
                                "opsworks:DescribeDeployments",
                                "opsworks:DescribeInstances",
                                "opsworks:DescribeStacks",
                                "opsworks:UpdateApp",
                                "opsworks:UpdateStack"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "cloudformation:CreateStack",
                                "cloudformation:DeleteStack",
                                "cloudformation:DescribeStacks",
                                "cloudformation:UpdateStack",
                                "cloudformation:CreateChangeSet",
                                "cloudformation:DeleteChangeSet",
                                "cloudformation:DescribeChangeSet",
                                "cloudformation:ExecuteChangeSet",
                                "cloudformation:SetStackPolicy",
                                "cloudformation:ValidateTemplate"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Action": [
                                "codebuild:BatchGetBuilds",
                                "codebuild:StartBuild",
                                "codebuild:BatchGetBuildBatches",
                                "codebuild:StartBuildBatch"
                            ],
                            "Resource": "*",
                            "Effect": "Allow"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "devicefarm:ListProjects",
                                "devicefarm:ListDevicePools",
                                "devicefarm:GetRun",
                                "devicefarm:GetUpload",
                                "devicefarm:CreateUpload",
                                "devicefarm:ScheduleRun"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "servicecatalog:ListProvisioningArtifacts",
                                "servicecatalog:CreateProvisioningArtifact",
                                "servicecatalog:DescribeProvisioningArtifact",
                                "servicecatalog:DeleteProvisioningArtifact",
                                "servicecatalog:UpdateProduct"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "cloudformation:ValidateTemplate"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "ecr:DescribeImages"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "states:DescribeExecution",
                                "states:DescribeStateMachine",
                                "states:StartExecution"
                            ],
                            "Resource": "*"
                        },
                        {
                            "Effect": "Allow",
                            "Action": [
                                "appconfig:StartDeployment",
                                "appconfig:StopDeployment",
                                "appconfig:GetDeployment"
                            ],
                            "Resource": "*"
                        }
                    ],
                    "Version": "2012-10-17"
                }

    IAMPolicy:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"ssm:GetAutomationExecution\",\"ec2:DescribeIamInstanceProfileAssociations\",\"ec2:AssociateIamInstanceProfile\",\"ec2:DisassociateIamInstanceProfile\",\"ec2:DescribeInstances\",\"ssm:StartAutomationExecution\",\"iam:GetInstanceProfile\",\"iam:AddRoleToInstanceProfile\",\"iam:AttachRolePolicy\",\"iam:ListInstanceProfilesForRole\"],\"Resource\":\"*\",\"Effect\":\"Allow\"},{\"Action\":[\"iam:CreateInstanceProfile\"],\"Resource\":[\"arn:aws:iam::*:instance-profile/${IAMRole2}\"],\"Effect\":\"Allow\"},{\"Action\":[\"iam:PassRole\",\"iam:GetRole\"],\"Resource\":[\"arn:aws:iam::*:role/${IAMRole2}\",\"arn:aws:iam::*:role/${IAMRole}\"],\"Effect\":\"Allow\"},{\"Action\":[\"iam:CreateRole\"],\"Resource\":[\"arn:aws:iam::*:role/${IAMRole2}\"],\"Effect\":\"Allow\"}]}"
            Roles: 
              - !Ref IAMRole
            PolicyName: "AWS-QuickSetup-SSMHostMgmt-CreateAndAttachRoleInlinePolicy-eu-west-1-eam6a"

    IAMPolicy2:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"iam:ListRoles\",\"config:DescribeConfigurationRecorders\",\"compute-optimizer:GetEnrollmentStatus\",\"support:DescribeTrustedAdvisorChecks\"],\"Resource\":\"*\",\"Effect\":\"Allow\"},{\"Action\":[\"ssm:UpdateServiceSetting\",\"ssm:GetServiceSetting\"],\"Resource\":[\"arn:aws:ssm:*:*:servicesetting/ssm/opsitem/ssm-patchmanager\",\"arn:aws:ssm:*:*:servicesetting/ssm/opsitem/EC2\",\"arn:aws:ssm:*:*:servicesetting/ssm/opsdata/ExplorerOnboarded\",\"arn:aws:ssm:*:*:servicesetting/ssm/opsdata/Association\",\"arn:aws:ssm:*:*:servicesetting/ssm/opsdata/ComputeOptimizer\",\"arn:aws:ssm:*:*:servicesetting/ssm/opsdata/ConfigCompliance\",\"arn:aws:ssm:*:*:servicesetting/ssm/opsdata/OpsData-TrustedAdvisor\",\"arn:aws:ssm:*:*:servicesetting/ssm/opsdata/SupportCenterCase\"],\"Effect\":\"Allow\"},{\"Condition\":{\"StringEquals\":{\"iam:AWSServiceName\":\"ssm.amazonaws.com\"}},\"Action\":[\"iam:CreateServiceLinkedRole\"],\"Resource\":\"arn:aws:iam::*:role/aws-service-role/ssm.amazonaws.com/AWSServiceRoleForAmazonSSM\",\"Effect\":\"Allow\"}]}"
            Roles: 
              - !Ref IAMRole
            PolicyName: "SSMQuickSetupEnableExplorerInlinePolicy"

    IAMPolicy3:
        Type: "AWS::IAM::Policy"
        Properties:
            PolicyDocument: !Sub "{\"Version\":\"2012-10-17\",\"Statement\":[{\"Action\":[\"sts:AssumeRole\"],\"Resource\":[\"arn:*:iam::*:role/${IAMRole4}\"],\"Effect\":\"Allow\"}]}"
            Roles: 
              - !Sub "AWS-QuickSetup-StackSet-Local-${IAMGroup2}istrationRole"
            PolicyName: !Sub "AssumeRole-${IAMRole4}"

    IAMInstanceProfile:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            Path: "/"
            InstanceProfileName: !Ref IAMRole2
            Roles: 
              - !Ref IAMRole2

    IAMInstanceProfile2:
        Type: "AWS::IAM::InstanceProfile"
        Properties:
            Path: "/"
            InstanceProfileName: !Ref IAMRole7
            Roles: 
              - !Ref IAMRole7

    IAMAccessKey:
        Type: "AWS::IAM::AccessKey"
        Properties:
            Status: "Active"
            UserName: !Ref S3Bucket2

    IAMAccessKey2:
        Type: "AWS::IAM::AccessKey"
        Properties:
            Status: "Active"
            UserName: !Ref S3Bucket2

    IAMAccessKey3:
        Type: "AWS::IAM::AccessKey"
        Properties:
            Status: "Active"
            UserName: "Synology"

    IAMVirtualMFADevice:
        Type: "AWS::IAM::VirtualMFADevice"
        Properties:
            SerialNumber: !Sub "arn:aws:iam::${AWS::AccountId}:mfa/root-account-mfa-device"
            Users: 
              - !Sub "arn:aws:iam::${AWS::AccountId}:root"

    IAMVirtualMFADevice2:
        Type: "AWS::IAM::VirtualMFADevice"
        Properties:
            SerialNumber: !Sub "arn:aws:iam::${AWS::AccountId}:mfa/${S3Bucket2}"
            Users: 
              - !Sub "arn:aws:iam::${AWS::AccountId}:user/${S3Bucket2}"

    EC2DHCPOptions:
        Type: "AWS::EC2::DHCPOptions"
        Properties:
            DomainName: !Sub "${AWS::Region}.compute.internal"

    LambdaFunction:
        Type: "AWS::Lambda::Function"
        Properties:
            Description: ""
            FunctionName: "InvalidateCloudFrontDistribution"
            Handler: "lambda_function.lambda_handler"
            Architectures: 
              - "x86_64"
            Code: 
                S3Bucket: "awslambda-eu-cent-1-tasks"
                S3Key: !Sub "/snapshots/${AWS::AccountId}/InvalidateCloudFrontDistribution-b882c959-dc60-4088-859d-2eceb00d35be"
                S3ObjectVersion: "0.MgVNMcFT5Itq1cfEuvr4O9.Hv5YMp6"
            MemorySize: 128
            Role: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/InvalidateCloudFrontDistribution-role-zhfcsb50"
            Runtime: "python3.8"
            Timeout: 3
            TracingConfig: 
                Mode: "PassThrough"
            EphemeralStorage: 
                Size: 512

    S3Bucket:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !Sub "codepipeline-${AWS::Region}-528031206708"

    S3Bucket2:
        Type: "AWS::S3::Bucket"
        Properties:
            BucketName: !GetAtt CodeCommitRepository.Name

    S3BucketPolicy:
        Type: "AWS::S3::BucketPolicy"
        Properties:
            Bucket: !Ref S3Bucket
            PolicyDocument: 
                Version: "2012-10-17"
                Id: "SSEAndSSLPolicy"
                Statement: 
                  - 
                    Sid: "DenyUnEncryptedObjectUploads"
                    Effect: "Deny"
                    Principal: "*"
                    Action: "s3:PutObject"
                    Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
                    Condition: 
                        StringNotEquals: 
                            "s3:x-amz-server-side-encryption": "aws:kms"
                  - 
                    Sid: "DenyInsecureConnections"
                    Effect: "Deny"
                    Principal: "*"
                    Action: "s3:*"
                    Resource: !Sub "arn:aws:s3:::${S3Bucket}/*"
                    Condition: 
                        Bool: 
                            "aws:SecureTransport": "false"

    S3BucketPolicy2:
        Type: "AWS::S3::BucketPolicy"
        Properties:
            Bucket: !Ref S3Bucket2
            PolicyDocument: 
                Version: "2012-10-17"
                Id: "Policy1650643628116"
                Statement: 
                  - 
                    Sid: "Stmt1650639415920"
                    Effect: "Allow"
                    Principal: 
                        AWS: !Sub "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity ${CloudFrontCloudFrontOriginAccessIdentity}"
                    Action: "s3:GetObject"
                    Resource: !Sub "arn:aws:s3:::${S3Bucket2}/*"

    ElastiCacheUser:
        Type: "AWS::ElastiCache::User"
        Properties:
            UserId: "default"
            UserName: "default"
            Engine: "redis"
            AccessString: "on ~* +@all"
            NoPasswordRequired: true

    OpsWorksUserProfile:
        Type: "AWS::OpsWorks::UserProfile"
        Properties:
            AllowSelfManagement: false
            IamUserArn: !Sub "arn:aws:iam::${AWS::AccountId}:user/${S3Bucket2}"
            SshUsername: !Ref S3Bucket2

    LogsLogGroup:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: !Sub "/aws/codebuild/${S3Bucket2}"

    LogsLogGroup2:
        Type: "AWS::Logs::LogGroup"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"

    LogsLogStream:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/codebuild/${S3Bucket2}"
            LogStreamName: "052f0d4c-739e-4ae0-aad8-0c588e59d124"

    LogsLogStream2:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/codebuild/${S3Bucket2}"
            LogStreamName: "0971f49b-7577-4fb2-a697-69c3e6c82b2c"

    LogsLogStream3:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/codebuild/${S3Bucket2}"
            LogStreamName: "3e9678da-a861-4443-a919-db99acef1a40"

    LogsLogStream4:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/codebuild/${S3Bucket2}"
            LogStreamName: "45a4206d-dbc4-4939-bafd-9a1d428081b5"

    LogsLogStream5:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/codebuild/${S3Bucket2}"
            LogStreamName: "6e483eb3-9905-46aa-94d7-10957152a740"

    LogsLogStream6:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/codebuild/${S3Bucket2}"
            LogStreamName: "9d6082c0-c3af-46d4-8dac-0fe4a3b720b5"

    LogsLogStream7:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/codebuild/${S3Bucket2}"
            LogStreamName: "bb3ed7b5-a0ee-4793-a76c-76aa120bf573"

    LogsLogStream8:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"
            LogStreamName: "2022/04/25/[$LATEST]079488fcaa944e948fcaccb77ae71352"

    LogsLogStream9:
        Type: "AWS::Logs::LogStream"
        Properties:
            LogGroupName: !Sub "/aws/lambda/${LambdaFunction}"
            LogStreamName: "2022/04/25/[$LATEST]3427b6d9a4d24f2491e435f74325de6a"

    CloudFrontDistribution:
        Type: "AWS::CloudFront::Distribution"
        Properties:
            DistributionConfig: 
                Aliases: 
                  - !Sub "${S3Bucket2}.cz"
                  - !Sub "www.${S3Bucket2}.cz"
                Origins: 
                  - 
                    ConnectionAttempts: 3
                    ConnectionTimeout: 10
                    DomainName: !Sub "${S3Bucket2}.s3.${AWS::Region}.amazonaws.com"
                    Id: !Sub "${S3Bucket2}.s3.${AWS::Region}.amazonaws.com"
                    OriginPath: ""
                    S3OriginConfig: 
                        OriginAccessIdentity: !Sub "origin-access-identity/cloudfront/${CloudFrontCloudFrontOriginAccessIdentity}"
                OriginGroups: 
                    Quantity: 0
                DefaultCacheBehavior: 
                    AllowedMethods: 
                      - "HEAD"
                      - "GET"
                    CachedMethods: 
                      - "HEAD"
                      - "GET"
                    Compress: true
                    CachePolicyId: "658327ea-f89d-4fab-a63d-7e88639e58f6"
                    SmoothStreaming: false
                    TargetOriginId: !Sub "${S3Bucket2}.s3.${AWS::Region}.amazonaws.com"
                    ViewerProtocolPolicy: "redirect-to-https"
                Comment: ""
                PriceClass: "PriceClass_All"
                Enabled: true
                ViewerCertificate: 
                    AcmCertificateArn: !Sub "arn:aws:acm:us-east-1:${AWS::AccountId}:certificate/5091cf29-4c38-4941-aff9-f36888ed768b"
                    CloudFrontDefaultCertificate: false
                    MinimumProtocolVersion: "TLSv1.2_2021"
                    SslSupportMethod: "sni-only"
                Restrictions: 
                    GeoRestriction: 
                        RestrictionType: "none"
                HttpVersion: "http2"
                DefaultRootObject: "index.html"
                IPV6Enabled: true

    CloudFrontCloudFrontOriginAccessIdentity:
        Type: "AWS::CloudFront::CloudFrontOriginAccessIdentity"
        Properties:
            CloudFrontOriginAccessIdentityConfig: 
                Comment: !Sub "access-identity-${S3Bucket2}.s3.${AWS::Region}.amazonaws.com"

    CodeCommitRepository:
        Type: "AWS::CodeCommit::Repository"
        Properties:
            RepositoryName: !Ref CodeBuildProject

    CodeBuildProject:
        Type: "AWS::CodeBuild::Project"
        Properties:
            Name: "dakob"
            Source: 
                BuildSpec: |
                    version: 0.2
                    
                    #env:
                      #variables:
                         # key: "value"
                         # key: "value"
                      #parameter-store:
                         # key: "value"
                         # key: "value"
                      #secrets-manager:
                         # key: secret-id:json-key:version-stage:version-id
                         # key: secret-id:json-key:version-stage:version-id
                      #exported-variables:
                         # - variable
                         # - variable
                      #git-credential-helper: yes
                    #batch:
                      #fast-fail: true
                      #build-list:
                      #build-matrix:
                      #build-graph:
                    phases:
                      #install:
                        #If you use the Ubuntu standard image 2.0 or later, you must specify runtime-versions.
                        #If you specify runtime-versions and use an image other than Ubuntu standard image 2.0, the build fails.
                        #runtime-versions:
                          # name: version
                          # name: version
                        #commands:
                          # - command
                          # - command
                      #pre_build:
                        #commands:
                          # - command
                          # - command
                      build:
                        commands:
                            - aws s3 rm --recursive "s3://dakob/"
                          # - command
                      #post_build:
                        #commands:
                          # - command
                          # - command
                    #reports:
                      #report-name-or-arn:
                        #files:
                          # - location
                          # - location
                        #base-directory: location
                        #discard-paths: yes
                        #file-format: JunitXml | CucumberJson
                    #artifacts:
                      #files:
                        # - location
                        # - location
                      #name: $(date +%Y-%m-%d)
                      #discard-paths: yes
                      #base-directory: location
                    #cache:
                      #paths:
                        # - paths
                InsecureSsl: false
                Type: "CODEPIPELINE"
            Artifacts: 
                EncryptionDisabled: false
                Name: "dakob"
                Packaging: "NONE"
                Type: "CODEPIPELINE"
            Cache: 
                Type: "NO_CACHE"
            Environment: 
                ComputeType: "BUILD_GENERAL1_SMALL"
                Image: "aws/codebuild/amazonlinux2-aarch64-standard:1.0"
                ImagePullCredentialsType: "CODEBUILD"
                PrivilegedMode: false
                Type: "ARM_CONTAINER"
            ServiceRole: !Sub "arn:aws:iam::${AWS::AccountId}:role/service-role/CodeBuildDakob"
            TimeoutInMinutes: 60
            QueuedTimeoutInMinutes: 480
            EncryptionKey: !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:alias/aws/s3"
            BadgeEnabled: false
            LogsConfig: 
                CloudWatchLogs: 
                    Status: "ENABLED"
                S3Logs: 
                    Status: "DISABLED"
                    EncryptionDisabled: false
            Visibility: "PRIVATE"

    BudgetsBudget:
        Type: "AWS::Budgets::Budget"
        Properties:
            Budget: 
                BudgetLimit: 
                    Amount: "5.0"
                    Unit: "USD"
                TimePeriod: 
                    Start: "2018-12-31T22:00:00.000Z"
                    End: "2087-06-15T00:00:00.000Z"
                TimeUnit: "MONTHLY"
                CostFilters: {}
                BudgetName: "Monthly Budget"
                CostTypes: 
                    IncludeTax: true
                    IncludeSubscription: true
                    UseBlended: false
                    IncludeRefund: true
                    IncludeCredit: true
                    IncludeUpfront: true
                    IncludeRecurring: true
                    IncludeOtherSubscription: true
                    IncludeSupport: true
                    IncludeDiscount: true
                    UseAmortized: false
                BudgetType: "COST"

    CodePipelinePipeline:
        Type: "AWS::CodePipeline::Pipeline"
        Properties:
            Name: !Ref S3Bucket2
            RoleArn: !GetAtt IAMRole8.Arn
            ArtifactStore: 
                Location: !Ref S3Bucket
                Type: "S3"
            Stages: 
              - 
                Name: "Source"
                Actions: 
                  - 
                    Name: "Source"
                    ActionTypeId: 
                        Category: "Source"
                        Owner: "AWS"
                        Provider: "CodeCommit"
                        Version: "1"
                    Configuration: 
                        BranchName: "master"
                        OutputArtifactFormat: "CODE_ZIP"
                        PollForSourceChanges: "false"
                        RepositoryName: !Ref S3Bucket2
                    OutputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "SourceVariables"
                    RunOrder: 1
              - 
                Name: "Build"
                Actions: 
                  - 
                    Name: "Build"
                    ActionTypeId: 
                        Category: "Build"
                        Owner: "AWS"
                        Provider: "CodeBuild"
                        Version: "1"
                    Configuration: 
                        ProjectName: !Ref S3Bucket2
                    InputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    OutputArtifacts: 
                      - 
                        Name: "BuildArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "BuildVariables"
                    RunOrder: 1
              - 
                Name: "Deploy"
                Actions: 
                  - 
                    Name: "Deploy"
                    ActionTypeId: 
                        Category: "Deploy"
                        Owner: "AWS"
                        Provider: "S3"
                        Version: "1"
                    Configuration: 
                        BucketName: !Ref S3Bucket2
                        CacheControl: "max-age=3600"
                        Extract: "true"
                    InputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    Namespace: "DeployVariables"
                    RunOrder: 1
              - 
                Name: !Ref LambdaFunction
                Actions: 
                  - 
                    Name: !Sub "${LambdaFunction}Lambda"
                    ActionTypeId: 
                        Category: "Invoke"
                        Owner: "AWS"
                        Provider: "Lambda"
                        Version: "1"
                    Configuration: 
                        FunctionName: !Ref LambdaFunction
                        UserParameters: !Sub "{\"distributionId\": \"${CloudFrontDistribution}\", \"objectPaths\": [\"/*\"]}"
                    InputArtifacts: 
                      - 
                        Name: "SourceArtifact"
                    Region: !Ref AWS::Region
                    RunOrder: 1

    EventsRule:
        Type: "AWS::Events::Rule"
        Properties:
            Name: !Sub "codepipeline-${S3Bucket2}-master-113938-rule"
            Description: "Amazon CloudWatch Events rule to automatically start your pipeline when a change occurs in the AWS CodeCommit source repository and branch. Deleting this may prevent changes from being detected in that pipeline. Read more: http://docs.aws.amazon.com/codepipeline/latest/userguide/pipelines-about-starting.html"
            EventPattern: !Sub "{\"source\":[\"aws.codecommit\"],\"detail-type\":[\"CodeCommit Repository State Change\"],\"resources\":[\"arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${S3Bucket2}\"],\"detail\":{\"event\":[\"referenceCreated\",\"referenceUpdated\"],\"referenceType\":[\"branch\"],\"referenceName\":[\"master\"]}}"
            State: "ENABLED"
            Targets: 
              - 
                Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${S3Bucket2}"
                Id: !Sub "codepipeline-${S3Bucket2}"
                RoleArn: !GetAtt IAMRole9.Arn
            EventBusName: "default"

    XRayGroup:
        Type: "AWS::XRay::Group"
        Properties:
            GroupName: "Default"
            InsightsConfiguration: 
                InsightsEnabled: false
                NotificationsEnabled: false

    MemoryDBUser:
        Type: "AWS::MemoryDB::User"
        Properties:
            UserName: "default"
            AccessString: "on ~* &* +@all"
            AuthenticationMode: "no-password"

    MemoryDBACL:
        Type: "AWS::MemoryDB::ACL"
        Properties:
            ACLName: "open-access"
            UserNames: 
              - "default"

    MemoryDBParameterGroup:
        Type: "AWS::MemoryDB::ParameterGroup"
        Properties:
            Description: "Default parameter group for memorydb_redis6"
            Family: "memorydb_redis6"
            Parameters: 
              - 
                Name: "acllog-max-len"
                Value: "128"
                Description: "The maximum length of the ACL Log"
                DataType: "integer"
                AllowedValues: "1-10000"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "activedefrag"
                Value: "no"
                Description: "Enabled active memory defragmentation"
                DataType: "string"
                AllowedValues: "yes,no"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "active-defrag-cycle-max"
                Value: "75"
                Description: "Maximal effort for defrag in CPU percentage"
                DataType: "integer"
                AllowedValues: "1-75"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "active-defrag-cycle-min"
                Value: "5"
                Description: "Minimal effort for defrag in CPU percentage"
                DataType: "integer"
                AllowedValues: "1-75"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "active-defrag-ignore-bytes"
                Value: "104857600"
                Description: "Minimum amount of fragmentation waste to start active defrag"
                DataType: "integer"
                AllowedValues: "1048576-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "active-defrag-max-scan-fields"
                Value: "1000"
                Description: "Maximum number of set/hash/zset/list fields that will be processed from the main dictionary scan"
                DataType: "integer"
                AllowedValues: "1-1000000"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "active-defrag-threshold-lower"
                Value: "10"
                Description: "Minimum percentage of fragmentation to start active defrag"
                DataType: "integer"
                AllowedValues: "1-100"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "active-defrag-threshold-upper"
                Value: "100"
                Description: "Maximum percentage of fragmentation at which we use maximum effort"
                DataType: "integer"
                AllowedValues: "1-100"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "active-expire-effort"
                Value: "1"
                Description: "The amount of effort that redis uses to expire items in the active expiration job"
                DataType: "integer"
                AllowedValues: "1-10"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "activerehashing"
                Value: "yes"
                Description: "Apply rehashing or not"
                DataType: "string"
                AllowedValues: "yes,no"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "client-output-buffer-limit-normal-hard-limit"
                Value: "0"
                Description: "Normal client output buffer hard limit in bytes"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "client-output-buffer-limit-normal-soft-limit"
                Value: "0"
                Description: "Normal client output buffer soft limit in bytes"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "client-output-buffer-limit-normal-soft-seconds"
                Value: "0"
                Description: "Normal client output buffer soft limit in seconds"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "client-output-buffer-limit-pubsub-hard-limit"
                Value: "33554432"
                Description: "Pubsub client output buffer hard limit in bytes"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "client-output-buffer-limit-pubsub-soft-limit"
                Value: "8388608"
                Description: "Pubsub client output buffer soft limit in bytes"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "client-output-buffer-limit-pubsub-soft-seconds"
                Value: "60"
                Description: "Pubsub client output buffer soft limit in seconds"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "hash-max-ziplist-entries"
                Value: "512"
                Description: "The maximum number of hash entries in order for the dataset to be compressed"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "hash-max-ziplist-value"
                Value: "64"
                Description: "The threshold of biggest hash entries in order for the dataset to be compressed"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "hll-sparse-max-bytes"
                Value: "3000"
                Description: "HyperLogLog sparse representation bytes limit"
                DataType: "integer"
                AllowedValues: "1-16000"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "lazyfree-lazy-eviction"
                Value: "no"
                Description: "Perform an asynchronous delete on evictions"
                DataType: "string"
                AllowedValues: "yes,no"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "lazyfree-lazy-expire"
                Value: "no"
                Description: "Perform an asynchronous delete on expired keys"
                DataType: "string"
                AllowedValues: "yes,no"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "lazyfree-lazy-server-del"
                Value: "no"
                Description: "Perform an asynchronous delete on key updates"
                DataType: "string"
                AllowedValues: "yes,no"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "lazyfree-lazy-user-del"
                Value: "no"
                Description: "Specifies whether the default behavior of DEL command acts the same as UNLINK"
                DataType: "string"
                AllowedValues: "yes,no"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "lfu-decay-time"
                Value: "1"
                Description: "The amount of time in minutes to decrement the key counter for LFU eviction policyd"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "lfu-log-factor"
                Value: "10"
                Description: "The log factor for incrementing key counter for LFU eviction policy"
                DataType: "integer"
                AllowedValues: "1-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "list-compress-depth"
                Value: "0"
                Description: "Number of quicklist ziplist nodes from each side of the list to exclude from compression. The head and tail of the list are always uncompressed for fast push/pop operations"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "maxmemory-policy"
                Value: "noeviction"
                Description: "Max memory policy"
                DataType: "string"
                AllowedValues: "volatile-lru,allkeys-lru,volatile-lfu,allkeys-lfu,volatile-random,allkeys-random,volatile-ttl,noeviction"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "maxmemory-samples"
                Value: "3"
                Description: "Max memory samples"
                DataType: "integer"
                AllowedValues: "1-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "notify-keyspace-events"
                Description: "The keyspace events for Redis to notify Pub/Sub clients about. By default all notifications are disabled"
                DataType: "string"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "set-max-intset-entries"
                Value: "512"
                Description: "The limit in the size of the set in order for the dataset to be compressed"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "slowlog-log-slower-than"
                Value: "10000"
                Description: "The execution time, in microseconds, to exceed in order for the command to get logged. Note that a negative number disables the slow log, while a value of zero forces the logging of every command"
                DataType: "integer"
                AllowedValues: "-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "slowlog-max-len"
                Value: "128"
                Description: "The length of the slow log. There is no limit to this length. Just be aware that it will consume memory. You can reclaim memory used by the slow log with SLOWLOG RESET."
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "stream-node-max-bytes"
                Value: "4096"
                Description: "The maximum size of a single node in a stream in bytes"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "stream-node-max-entries"
                Value: "100"
                Description: "The maximum number of items a single node in a stream can contain"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "tcp-keepalive"
                Value: "300"
                Description: "If non-zero, send ACKs every given number of seconds"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "timeout"
                Value: "0"
                Description: "Close connection if client is idle for a given number of seconds, or never if 0"
                DataType: "integer"
                AllowedValues: "0,20-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "tracking-table-max-keys"
                Value: "1000000"
                Description: "The maximum number of keys allowed for the tracking table for client side caching"
                DataType: "integer"
                AllowedValues: "1-100000000"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "zset-max-ziplist-entries"
                Value: "128"
                Description: "The maximum number of sorted set entries in order for the dataset to be compressed"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"
              - 
                Name: "zset-max-ziplist-value"
                Value: "64"
                Description: "The threshold of biggest sorted set entries in order for the dataset to be compressed"
                DataType: "integer"
                AllowedValues: "0-"
                MinimumEngineVersion: "6.2.4"

